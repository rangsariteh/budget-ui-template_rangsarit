import{Db as k,Fb as Y,Ga as O,Gb as b,W as y,Z as h,ib as D,qb as M,rb as S,tb as g,vb as T,wb as W,y as c,z as I}from"./chunk-6EXSEE2M.js";import"./chunk-W24DN3KC.js";import"./chunk-KRUBFCQF.js";import"./chunk-QHMZK47R.js";import"./chunk-67DUN5SY.js";import"./chunk-4HBWAO4S.js";import"./chunk-G3CV3VGG.js";import"./chunk-2AGMVNYJ.js";import"./chunk-FFC3LYJY.js";import"./chunk-HNULSZ7G.js";import"./chunk-4WFVMWDK.js";import"./chunk-V6UEUHQD.js";import"./chunk-NMYJD6OP.js";import"./chunk-B43CU5JX.js";import"./chunk-TQEIIVVC.js";import"./chunk-LF5XB4YN.js";import"./chunk-PM2M367S.js";function n(t){"@babel/helpers - typeof";return n=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(t)}function f(t){if(t===null||t===!0||t===!1)return NaN;var e=Number(t);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function s(t,e){if(e.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+e.length+" present")}function d(t){s(1,arguments);var e=Object.prototype.toString.call(t);return t instanceof Date||n(t)==="object"&&e==="[object Date]"?new Date(t.getTime()):typeof t=="number"||e==="[object Number]"?new Date(t):((typeof t=="string"||e==="[object String]")&&typeof console<"u"&&(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn(new Error().stack)),new Date(NaN))}function m(t,e){s(2,arguments);var r=d(t),a=f(e);if(isNaN(a))return new Date(NaN);if(!a)return r;var o=r.getDate(),u=new Date(r.getTime());u.setMonth(r.getMonth()+a+1,0);var l=u.getDate();return o>=l?u:(r.setFullYear(u.getFullYear(),u.getMonth(),o),r)}function i(t){s(1,arguments);var e=d(t),r=e.getFullYear(),a=e.getMonth(),o=new Date(0);return o.setFullYear(r,a+1,0),o.setHours(0,0,0,0),o.getDate()}function x(t,e){s(2,arguments);var r=d(t),a=f(e),o=r.getFullYear(),u=r.getDate(),l=new Date(0);l.setFullYear(o,a,15),l.setHours(0,0,0,0);var v=i(l);return r.setMonth(a,Math.min(u,v)),r}function p(t,e){if(s(2,arguments),n(e)!=="object"||e===null)throw new RangeError("values parameter must be an object");var r=d(t);return isNaN(r.getTime())?new Date(NaN):(e.year!=null&&r.setFullYear(e.year),e.month!=null&&(r=x(r,e.month)),e.date!=null&&r.setDate(f(e.date)),e.hours!=null&&r.setHours(f(e.hours)),e.minutes!=null&&r.setMinutes(f(e.minutes)),e.seconds!=null&&r.setSeconds(f(e.seconds)),e.milliseconds!=null&&r.setMilliseconds(f(e.milliseconds)),r)}var Re=(()=>{let e=class e{constructor(){this.modalCtrl=c(D),this.date=p(new Date,{date:1}),this.addMonths=a=>{this.date=m(this.date,a)},M({swapVertical:b,pricetag:k,search:Y,alertCircleOutline:g,add:S,arrowBack:T,arrowForward:W})}};e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=I({type:e,selectors:[["app-expense-list"]],standalone:!0,features:[h],decls:1,vars:0,template:function(o,u){o&1&&y(0,`Expense List
`)},dependencies:[O],encapsulation:2});let t=e;return t})();export{Re as default};
